@model PaginatedList<EmployeeManagement.ViewModels.EmployeeViewModel>

@{
    ViewBag.Title = "Employee List";
    var breadcrumbs = ViewBag.Breadcrumbs as List<EmpInfrastructure.Models.BreadCumbItem>;
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
    </div>
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Employee Directory</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fa fa-plus"></i> Add New Employee
        </a>
    </div>
    <div class="breadcrumbs-container">
        @await Html.PartialAsync("_BreadCrumbs", breadcrumbs)
    </div>
    <!-- Search and Filter Section -->
    <div class="card mb-4">
        <div class="card-body">
            <form id="searchForm" asp-action="Index" method="get" class="form-inline">
                <div class="form-group mr-2">
                    <input type="text" name="searchString" class="form-control" placeholder="Search by name..."
                           value="@ViewData["CurrentFilter"]" />
                </div>
                <!-- The search button is kept for accessibility, but it's not necessary -->
                <button type="submit" class="btn btn-outline-primary mr-2">
                    <i class="fa fa-search"></i> Search
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
            </form>
        </div>
    </div>

    <!-- Employee Table and Pagination (wrapper for AJAX updates) -->
    <div id="employeeTable">
        <!-- Employee Table -->
        @await Html.PartialAsync("_EmployeeListPartial")

        <!-- Pagination -->
        <div class="mt-3">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               class="btn btn-outline-primary @(Model.HasPreviousPage ? "" : "disabled")">
                Previous
            </a>
            <span class="ml-2 mr-2">Page @Model.PageIndex of @Model.TotalPages</span>
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               class="btn btn-outline-primary @(Model.HasNextPage ? "" : "disabled")">
                Next
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var searchTimeout;
            $("#searchForm input[name='searchString']").on('keyup', function () {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function () {
                    var formData = $("#searchForm").serialize();
                    $.ajax({
                        url: '@Url.Action("Index", "Employee")',
                        type: 'GET',
                        data: formData,
                        success: function (response) {
                            // Update the employee table and pagination section
                            var updatedContent = $(response).find("#employeeTable").html();
                            $("#employeeTable").html(updatedContent);
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.error("An error occurred during the AJAX search: " + errorThrown);
                        }
                    });
                }, 500);
            });
        });
    </script>
}
